import requests, json
from HTMLParser import HTMLParser
import xml.etree.ElementTree as ET
import pprint


def takeElementText(elem):
    return "".join(elem.itertext())

typeOfValuesMap = {
    'File size':'integer',
    'InitializedDataSize':'integer',
    'UninitializedDataSize':'integer',
    'ENGLISH US':'integer',
    'Number of sections':'integer',
    'Size':'integer',
    'Offset':'integer',
    'CodeSize':'integer',
    'First submission':'datetime',
    'Last submission':'datetime',
    'TimeStamp':'datetime',
    'Compilation timestamp':'datetime',
    'Entry Point':'hexa',
    'EntryPoint':'hexa',
    'FileFlagsMask':'hexa',
    'Entropy':'float',
}

def setObjectTypeValue(scope,value,type='string'):
    global typeOfValuesMap
    for scopeTest,typeMap in typeOfValuesMap.iteritems():
        if scopeTest==scope:
            type = typeMap
    return {'value':value,'type':type}




#response = requests.get('https://www.virustotal.com/en/file/524a100ce1f29e92b8dc3630130dc83a92af20a08c5432543a9ff2308e9e0bce/analysis/')
#data = response.content

file = open('data.txt','r')
data = file.read()


data = data.split('<div class="tab-pane')
data = data[1:]

sections = {'analysis','item-detail','item-relationships','additiona-info','behavioural-info'}
J = {}
for d in data:
    idInd = d.find('id="')+len('id="')
    id = d[idInd:d.find('"',idInd)]
    if id == 'analysis':
        if d.find('antivirus-results')>0:
            J['analysis']={}
            J['analysis']['AntivirusResult']={}
            J['analysis']['AntivirusUpdate']={}
            tbody = d[d.find('<tbody>'):d.find('</tbody>')+len('</tbody>')]
            root = ET.fromstring(tbody)
            for child in root:
                anti = child[0].text.strip()
                res = child[1].text.strip()
                upd = child[2].text.strip()
                if child[1].attrib['class'].find('text-green')>0:
                    res = 'Not detected'
                J['analysis']['AntivirusResult'][anti] = setObjectTypeValue(anti,res)
                J['analysis']['AntivirusUpdate'][anti] = setObjectTypeValue(anti,upd,'datetime')
    elif id == 'behavioural-info':
        if d.find('$("div[rel=tooltip]").tooltip();')>0:
            d = '<div class="tab-pane '+d
            body = d[:d.find('$("div[rel=tooltip]").tooltip();') + len('$("div[rel=tooltip]").tooltip();     </script>      </div>')]
            root = ET.fromstring(body)
            it = iter(root)
            J[id] = {}
            if root[0].tag == 'div':
                if root[0].attrib['class'] == 'alert':
                    root = root[1:]
            for child in it:
                if child.tag == 'h5':
                    title = takeElementText(child)
                    J[id][title] = {}
                    c = next(it)
                    enums = []
                    for e in c:
                        enums.append(takeElementText(e))
                    J[id][title] = setObjectTypeValue(title,enums,'array')
    elif id == 'item-relationships':
        dInd = d.find('<div id="item-relationships-content" class="extra-info">')
        body = d[dInd:]
        body = body[:len(body)-12]
        if len(body)>90:
            root = ET.fromstring(body)
            it = iter(root)
            J[id] = {}
            if root[0].tag == 'div':
                if root[0].attrib['class'] == 'alert':
                    root = root[1:]
            for child in it:
                if child.tag == 'h5':
                    title = takeElementText(child).strip()
                    J[id][title] = {}
                    c = next(it)
                    enums = []
                    c = c[1]
                    for e in c:
                        enums.append(takeElementText(e))
                    J[id][title] = setObjectTypeValue(title,enums,'array')
    else:
        ok=0
        if id == 'item-detail':
            if d.find('file-details">')>0:
                dInd = d.find('<div id="file-details">')
                body = d[dInd:d.find('$("div[rel=tooltip]").tooltip();',dInd)-13]
                ok=1
        if id == 'additional-info':
            if d.find('additional-info-content">')>0:
                dInd = d.find('<div id="additional-info-content">')
                dInd = d.find('<div id="file-details"',dInd)
                body = d[dInd:d.find('<div class="tab-pane',dInd)-23]
                ok=1
        if ok==1:
            root = ET.fromstring(body)
            it = iter(root)
            J[id]={}
            if root[0].tag=='div':
               if root[0].attrib['class']=='alert':
                   root = root[1:]
            for child in it:
                if child.tag=='h5':
                    title =  takeElementText(child)
                    J[id][title]={}
                    c = next(it)
                    if c.attrib['class'].find('expandable')>0:
                        for prop in c:
                            if prop.attrib['class']=='enum':
                                attr = prop[0].text.strip()
                                enum = {}

                                for j in range(1,len(prop)):
                                    val = prop[j].text.strip()
                                    title2 = c[0][j].text.strip()
                                    enum[title2] = val
                                J[id][title][attr] = setObjectTypeValue(attr,enum,'array')
                    elif c[0].attrib['class']=='expand-canvas':
                        for enum in c:
                            title2 = enum[0][0].text
                            enums = []
                            for e in enum[1]:
                                enums.append(e.text)
                            J[id][title][title2] = setObjectTypeValue(title2,enums,'array')
                    else:
                        for prop in c:
                            if prop.attrib['class']=='enum':
                                if prop[0].tag=='table':
                                    table = prop[0]
                                    attr = table[0][0].text
                                    enums = table[0][1]
                                    enums = takeElementText(enums)
                                    enums = enums.strip()
                                    enums = enums.split('\n')
                                    newEnums = []
                                    for e in enums:
                                        e = e.strip()
                                        if len(e)>0:
                                            newEnums.append(e)
                                    J[id][title][attr] = setObjectTypeValue(attr,newEnums,'array')
                                else:
                                    attr = prop[0].text
                                    prop[0].text = ''
                                    val = takeElementText(prop)
                                    J[id][title][attr] = setObjectTypeValue(attr,val.strip())






pp = pprint.PrettyPrinter(indent=4)
pp.pprint(J)
with open('json_example.json', 'w') as fp:
    json.dump(J, fp)
